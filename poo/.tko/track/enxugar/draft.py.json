{
    "patches": [
        {
            "label": "2025-09-23_19-38-23",
            "content": "@@ -1,1759 +0,0 @@\n-class Towel:    #this%0A    def __init__(self, color: str, size: str): # constructor%0A        self.color: str = color # atributos%0A        self.size: str = size%0A        self.wetness: int = 0%0A%0A    def dry(self, amount: int) -%3E None:%0A        self.wetness += amount%0A        if self.wetness %3E= self.getMaxWetness():%0A            print(%22toalha encharcada%22)%0A            self.wetness = self.getMaxWetness()%0A%0A    def isDry(self) -%3E bool:%0A        return self.wetness == 0%0A    %0A    def wringOut(self) -%3E None:%0A        self.wetness = 0%0A%0A    def getMaxWetness(self) -%3E int:%0A        if self.size == %22P%22:%0A            return 10%0A        if self.size == %22M%22:%0A            return 20%0A        if self.size == %22G%22:%0A            return 30%0A        return 0%0A%0A    def __str__(self) -%3E str: # toString%0A        return f%22Cor:%7Bself.color%7D, Tam:%7Bself.size%7D, Umidade:%7Bself.wetness%7D%22%0A    %0A    %0Adef main():%0A    toalha = Towel(%22%22, %22%22)%0A    while True:%0A        line = input()%0A        args = line.split(%22 %22)%0A        print('$' + line)%0A%0A        if args%5B0%5D == %22end%22:%0A            break%0A%0A        elif args%5B0%5D == %22criar%22:%0A            color = args%5B1%5D%0A            size = args%5B2%5D%0A            toalha = Towel(color, size)%0A%0A        elif args%5B0%5D == %22mostrar%22:%0A            print(toalha)%0A%0A        elif args%5B0%5D == %22enxugar%22: %0A            amount = int(args%5B1%5D)%0A            toalha.dry(amount)%0A            if toalha.wetness %3E toalha.getMaxWetness():   %0A                print(%22toalha encharcada%22)%0A                toalha.wetness = toalha.getMaxWetness()%0A%0A        elif args%5B0%5D == %22seca%22:%0A            if toalha.isDry()  :%0A                print(%22sim%22)%0A            else:%0A                print(%22nao%22)  %0A%0A        elif args%5B0%5D == %22torcer%22:%0A            toalha.wringOut()%0A%0A        else:%0A            print(%22Comando inv%C3%A1lido%22)%0A%0Amain()%0A\n",
            "lines": "0"
        },
        {
            "label": "2025-09-30_01-30-33",
            "content": "@@ -94,17 +94,16 @@\n lf.color\n- \n : str = \n",
            "lines": "69"
        },
        {
            "label": "2025-09-30_01-33-31",
            "content": "@@ -90,24 +90,25 @@\n   self.color\n+ \n : str = colo\n@@ -579,17 +579,16 @@\n  == %22P%22:\n- \n %0A       \n",
            "lines": "69"
        },
        {
            "label": "2025-09-30_01-34-18",
            "content": "@@ -578,16 +578,17 @@\n  == %22P%22:\n+ \n %0A       \n@@ -784,17 +784,16 @@\n n f%22Cor:\n- \n %7Bself.co\n",
            "lines": "69"
        },
        {
            "label": "2025-09-30_01-34-41",
            "content": "@@ -802,17 +802,16 @@\n r%7D, Tam:\n- \n %7Bself.si\n",
            "lines": "69"
        },
        {
            "label": "2025-09-30_01-34-48",
            "content": "@@ -824,17 +824,16 @@\n Umidade:\n- \n %7Bself.we\n",
            "lines": "69"
        },
        {
            "label": "2025-09-30_01-35-01",
            "content": "@@ -805,12 +805,8 @@\n  Tam\n-anho\n : %7Bs\n",
            "lines": "69"
        },
        {
            "label": "2025-09-30_01-35-18",
            "content": "class Towel:    #this\n    def __init__(self, color: str, size: str): # constructor\n        self.color: str = color # atributos\n        self.size: str = size\n        self.wetness: int = 0\n\n    def dry(self, amount: int) -> None:\n        self.wetness += amount\n        if self.wetness >= self.getMaxWetness():\n            print(\"toalha encharcada\")\n            self.wetness = self.getMaxWetness()\n\n    def isDry(self) -> bool:\n        return self.wetness == 0\n    \n    def wringOut(self) -> None:\n        self.wetness = 0\n\n    def getMaxWetness(self) -> int:\n        if self.size == \"P\":\n            return 10\n        if self.size == \"M\":\n            return 20\n        if self.size == \"G\":\n            return 30\n        return 0\n\n    def __str__(self) -> str: # toString\n        return f\"Cor: {self.color}, Tamanho: {self.size}, Umidade: {self.wetness}\"\n    \n    \ndef main():\n    toalha = Towel(\"\", \"\")\n    while True:\n        line = input()\n        args = line.split(\" \")\n        print('$' + line)\n\n        if args[0] == \"end\":\n            break\n\n        elif args[0] == \"criar\":\n            color = args[1]\n            size = args[2]\n            toalha = Towel(color, size)\n\n        elif args[0] == \"mostrar\":\n            print(toalha)\n\n        elif args[0] == \"enxugar\": \n            amount = int(args[1])\n            toalha.dry(amount)\n            if toalha.wetness > toalha.getMaxWetness():   \n                print(\"toalha encharcada\")\n                toalha.wetness = toalha.getMaxWetness()\n\n        elif args[0] == \"seca\":\n            if toalha.isDry()  :\n                print(\"sim\")\n            else:\n                print(\"nao\")  \n\n        elif args[0] == \"torcer\":\n            toalha.wringOut()\n\n        else:\n            print(\"Comando inv\u00e1lido\")\n\nmain()\n",
            "lines": "69"
        }
    ]
}