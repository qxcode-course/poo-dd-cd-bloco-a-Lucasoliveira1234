{
    "patches": [
        {
            "label": "2025-10-06_00-31-46",
            "content": "@@ -549,522 +549,4 @@\n ro%22)\n-%0A%0A    def fuel(self, increment: int) -%3E None:%0A        self.gas += increment%0A        if self.gas %3E self.gasMax:%0A            self.gas = self.gasMax%0A        %0A    def drive(self, distance: int) -%3E None:%0A        if self.pas == 0:%0A            print(%22fail: n%C3%A3o h%C3%A1 ningu%C3%A9m no carro%22)%0A            return%0A            %0A        if self.gas == 0:%0A            print(%22fail: tanque vazio%22)%0A            return%0A        %0A        if self.gas %3E= distance:%0A            self.gas -= distance%0A            self.km += distance%0A%0A        else:%0A%0A%0A%0A\n",
            "lines": "22"
        },
        {
            "label": "2025-10-06_00-45-59",
            "content": "@@ -1064,615 +1064,7 @@\n se:%0A\n-            self.gas%0A            print(%22fail: tanque vazio ap%C3%B3s andar %7Bself.gas%7D km%22)%0A            self.gas = 0%0A%0Adef main():%0A    carro = Car()%0A    while True:%0A        line: str = input()%0A        print(%22$ + line%22)%0A        args: list%5Bstr%5D = line.split(%22 %22)%0A%0A        if args%5B0%5D == %22show%22:%0A            print(carro)%0A        elif args%5B0%5D == %22enter%22:%0A            carro.enter()%0A        elif args%5B0%5D == %22leave%22:%0A            carro.leave()%0A        elif args%5B0%5D == %22fuel%22:%0A            carro.fuel(int(args%5B1%5D))%0A        elif args%5B0%5D == %22drive%22:%0A            carro.drive(int(args%5B1%5D))%0A        elif args%5B0%5D == %22end%22:%0A            \n+%0A%0A%0A\n",
            "lines": "45"
        },
        {
            "label": "2025-10-06_01-04-13",
            "content": "@@ -191,17 +191,16 @@\n rn f%22pas\n-s\n : %7Bself.\n@@ -1659,8 +1659,20 @@\n  %22end%22:%0A\n+            \n",
            "lines": "65"
        },
        {
            "label": "2025-10-06_01-04-55",
            "content": "@@ -1072,27 +1072,16 @@\n         \n- self.km +=\n  self.ga\n",
            "lines": "64"
        },
        {
            "label": "2025-10-06_01-06-48",
            "content": "@@ -1671,14 +1671,8 @@\n  %22end%22:%0A\n-main()\n",
            "lines": "64"
        },
        {
            "label": "2025-10-06_01-07-19",
            "content": "@@ -1141,16 +1141,30 @@\n %C3%B3s andar\n+ %7Bself.gas%7D km\n %22)%0A     \n@@ -1670,8 +1670,15 @@\n = %22end%22:\n+%0Amain()\n",
            "lines": "65"
        },
        {
            "label": "2025-10-06_01-08-54",
            "content": "@@ -1038,32 +1038,33 @@\n .km += distance%0A\n+%0A\n         else:%0A  \n@@ -1077,73 +1077,18 @@\n     \n-km_andado = self.gas%0A            self.km += km_andado%0A           \n+self.km +=\n  sel\n@@ -1084,36 +1084,32 @@\n f.km += self.gas\n- = 0\n %0A            pri\n@@ -1111,17 +1111,16 @@\n   print(\n-f\n %22fail: t\n@@ -1145,25 +1145,35 @@\n ndar\n- %7Bkm_andado%7D km%22)\n+%22)%0A            self.gas = 0\n %0A%0Ade\n@@ -1262,18 +1262,17 @@\n int(\n-f\n %22$ \n-%7B\n++ \n line\n-%7D\n %22)%0A \n@@ -1660,61 +1660,4 @@\n nd%22:\n-%0A            break%0A%0Aif __name__ == %22__main__%22:%0A    main()\n",
            "lines": "64"
        },
        {
            "label": "2025-10-06_01-12-59",
            "content": "@@ -1699,16 +1699,17 @@\n gs%5B0%5D ==\n+ \n %22end%22:%0A \n",
            "lines": "68"
        },
        {
            "label": "2025-10-06_01-13-29",
            "content": "@@ -1310,16 +1310,17 @@\n rint(f%22$\n+ \n %7Bline%7D%22)\n@@ -1699,17 +1699,16 @@\n gs%5B0%5D ==\n- \n %22end%22:%0A \n",
            "lines": "68"
        },
        {
            "label": "2025-10-06_01-14-18",
            "content": "@@ -518,36 +518,36 @@\n int(%22fail: n\n-ao ha\n+%C3%A3o h%C3%A1\n  ningu\n-e\n+%C3%A9\n m no carro%22)\n@@ -801,20 +801,20 @@\n l: n\n-ao ha\n+%C3%A3o h%C3%A1\n  ningu\n-e\n+%C3%A9\n m no\n",
            "lines": "68"
        },
        {
            "label": "2025-10-06_01-15-02",
            "content": "@@ -1192,17 +1192,17 @@\n vazio ap\n-o\n+%C3%B3\n s andar \n",
            "lines": "68"
        },
        {
            "label": "2025-10-06_01-15-23",
            "content": "class Car:\n    def __init__(self):\n        self.gas = 0\n        self.gasMax = 100\n        self.pas = 0\n        self.pasMax = 2\n        self.km = 0\n\n    def __str__(self) -> str:\n        return f\"pass: {self.pas}, gas: {self.gas}, km: {self.km}\"\n    \n    def enter(self) -> None:\n        if self.pas < self.pasMax:\n            self.pas += 1\n        else:\n            print(\"fail: limite de pessoas atingido\")\n\n    def leave(self) -> None:\n        if self.pas > 0:\n            self.pas -= 1\n        else:\n            print(\"fail: nao ha ninguem no carro\")\n\n    def fuel(self, increment: int) -> None:\n        self.gas += increment\n        if self.gas > self.gasMax:\n            self.gas = self.gasMax\n        \n    def drive(self, distance: int) -> None:\n        if self.pas == 0:\n            print(\"fail: nao ha ninguem no carro\")\n            return\n            \n        if self.gas == 0:\n            print(\"fail: tanque vazio\")\n            return\n        \n        if self.gas >= distance:\n            self.gas -= distance\n            self.km += distance\n        else:\n            km_andado = self.gas\n            self.km += km_andado\n            self.gas = 0\n            print(f\"fail: tanque vazio apos andar {km_andado} km\")\n\ndef main():\n    carro = Car()\n    while True:\n        line: str = input()\n        print(f\"${line}\")\n        args: list[str] = line.split(\" \")\n\n        if args[0] == \"show\":\n            print(carro)\n        elif args[0] == \"enter\":\n            carro.enter()\n        elif args[0] == \"leave\":\n            carro.leave()\n        elif args[0] == \"fuel\":\n            carro.fuel(int(args[1]))\n        elif args[0] == \"drive\":\n            carro.drive(int(args[1]))\n        elif args[0] == \"end\":\n            break\n\nif __name__ == \"__main__\":\n    main()",
            "lines": "68"
        }
    ]
}